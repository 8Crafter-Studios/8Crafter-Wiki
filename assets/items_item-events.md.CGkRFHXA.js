import{_ as t,c as l,a as e,O as n,T as s,r as p,o as h,R as a}from"./chunks/framework.C8JGFM_k.js";const q=JSON.parse('{"title":"Item Events","description":"Item events trigger when certain conditions are met. Creators can hook into these events to modify the game world when events are triggered.","frontmatter":{"title":"Item Events","description":"Item events trigger when certain conditions are met. Creators can hook into these events to modify the game world when events are triggered.","category":"General","nav_order":4,"tags":["scripting"],"mentions":["SmokeyStack"]},"headers":[],"relativePath":"items/item-events.md","filePath":"items/item-events.md","lastUpdated":1724191823000}'),r={name:"items/item-events.md"},o=s('<div class="tip custom-block"><p class="custom-block-title">FORMAT VERSION <code>1.21.10</code></p><p>Using the latest format version when creating custom items provides access to fresh features and improvements. The wiki aims to share up-to-date information about custom items, and currently targets format version <code>1.21.10</code>.</p></div><h2 id="registering-custom-components" tabindex="-1">Registering Custom Components <a class="header-anchor" href="#registering-custom-components" aria-label="Permalink to &quot;Registering Custom Components&quot;">​</a></h2><p>Item events trigger when certain conditions are met and can be &quot;listened&quot; to in <strong>custom components</strong> which are registered in scripts before the world is loaded.</p><p>Within each custom component, event handler functions (such as <a href="#onBeforeDurabilityDamage"><code>onBeforeDurabilityDamage</code></a>) are listed to configure what you want to happen when each event is triggered.</p><p><em>This example prevents the item from taking durability damage when hitting an entity:</em></p>',5),c=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { world } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@minecraft/server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UnbreakableItemComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onBeforeDurabilityDamage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        event.durabilityDamage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">world.beforeEvents.worldInitialize.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">itemComponentRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    itemComponentRegistry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerCustomComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:unbreakable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, UnbreakableItemComponent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="applying-custom-components" tabindex="-1">Applying Custom Components <a class="header-anchor" href="#applying-custom-components" aria-label="Permalink to &quot;Applying Custom Components&quot;">​</a></h2><p>To bind a custom component to a custom item, simply list them in the <a href="/items/item-components.html#custom-components"><code>minecraft:custom_components</code></a> component in your item JSON.</p>`,3),d=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;minecraft:custom_components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:unbreakable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="before-durability-damage" tabindex="-1">Before Durability Damage <a class="header-anchor" href="#before-durability-damage" aria-label="Permalink to &quot;Before Durability Damage&quot;">​</a></h2><p>This event will be called when an item containing this component is hitting an entity and about to take durability damage.</p>`,3),k=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onBeforeDurabilityDamage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.attackingEntity </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The attacking entity.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.durabilityDamage </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The damage applied to the item&#39;s durability when the event occurs.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.hitEntity </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The entity being hit.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The item stack used to hit the entity.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="complete-use" tabindex="-1">Complete Use <a class="header-anchor" href="#complete-use" aria-label="Permalink to &quot;Complete Use&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">DEPENDENCY</p><p>The complete use event requires the <a href="/items/item-components.html#use-modifiers"><code>minecraft:use_modifiers</code></a> component to be active on your item to trigger.</p></div><p>This event will be called when the use duration of the item containing this component is completed.</p>`,4),m=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:use_modifiers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;use_duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),u=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onCompleteUse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns the item stack that has completed charging.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.source </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns the source entity that triggered this item event.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="consume" tabindex="-1">Consume <a class="header-anchor" href="#consume" aria-label="Permalink to &quot;Consume&quot;">​</a></h2><p>This event will be called when an item containing this component is eaten by an entity.</p><div class="tip custom-block"><p class="custom-block-title">DEPENDENCIES</p><p>The complete use event requires the <a href="/items/item-components.html#use-modifiers"><code>minecraft:use_modifiers</code></a> and the <a href="/items/item-components.html#food"><code>minecraft:food</code></a> component to be active on your item to trigger.</p></div>`,4),E=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:food&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:use_modifiers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;use_duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,1),b=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onConsume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The item stack that was consumed.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.source </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The source entity that consumed the item.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="hit-entity" tabindex="-1">Hit Entity <a class="header-anchor" href="#hit-entity" aria-label="Permalink to &quot;Hit Entity&quot;">​</a></h2><p>This function will be called when an item containing this component is used to hit another entity.</p>`,3),g=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onHitEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.attackingEntity </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The attacking entity.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.hadEffect </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Whether the hit landed or had any effect.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.hitEntity </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The entity being hit.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The item stack used to hit the entity.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="mine-block" tabindex="-1">Mine Block <a class="header-anchor" href="#mine-block" aria-label="Permalink to &quot;Mine Block&quot;">​</a></h2><p>This function will be called when an item containing this component is used to mine a block.</p>`,3),_=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onMineBlock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.block </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The block impacted by this event.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The item stack used to mine the block.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.minedBlockPermutation </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The block permutation that was mined.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.source </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The entity that mined the block.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="use" tabindex="-1">Use <a class="header-anchor" href="#use" aria-label="Permalink to &quot;Use&quot;">​</a></h2><p>This function will be called when an item containing this component is used by a player.</p>`,3),y=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onUse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.itemStack </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The item stack when the item was used.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.source </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The player who used the item.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="use-on" tabindex="-1">Use On <a class="header-anchor" href="#use-on" aria-label="Permalink to &quot;Use On&quot;">​</a></h2><p>This function will be called when an item containing this component is used on a block.</p>`,3),v=s(`<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onUseOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.source </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The entity that used the item on the block.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.usedOnBlockPermutation </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The block permutation that the item was used on.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,1);function C(T,A,f,D,F,w){const i=p("CodeHeader");return h(),l("div",null,[o,e(i,null,{default:n(()=>[a("BP/scripts/unbreakable_component.js")]),_:1}),c,e(i,null,{default:n(()=>[a("minecraft:item")]),_:1}),d,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),k,e(i,null,{default:n(()=>[a("minecraft:item > components")]),_:1}),m,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),u,e(i,null,{default:n(()=>[a("minecraft:item > components")]),_:1}),E,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),b,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),g,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),_,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),y,e(i,null,{default:n(()=>[a("Custom Component")]),_:1}),v])}const B=t(r,[["render",C]]);export{q as __pageData,B as default};
