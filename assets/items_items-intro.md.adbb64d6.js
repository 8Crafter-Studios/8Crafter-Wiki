import{_ as p,r,c as l,a,w as t,e,b as n,o as i,d as o}from"./404.md.f13da028.js";const G=`{"title":"Intro to Items","description":"","frontmatter":{"title":"Intro to Items","category":"General","nav_order":1,"tags":["guide"]},"headers":[{"level":2,"title":"Gem Behavior Code (BP)","slug":"gem-behavior-code-bp"},{"level":2,"title":"Gem Resource Code (RP)","slug":"gem-resource-code-rp"},{"level":2,"title":"Gem Textures and Shortnames","slug":"gem-textures-and-shortnames"},{"level":2,"title":"Your Gem is finished!","slug":"your-gem-is-finished"},{"level":2,"title":"Custom food item: - creating an eatable 'Meal'","slug":"custom-food-item-creating-an-eatable-meal"},{"level":3,"title":"Meal BP Code","slug":"meal-bp-code"},{"level":3,"title":"Meal RP Code","slug":"meal-rp-code"},{"level":3,"title":"Meal Textures and Shortnames","slug":"meal-textures-and-shortnames"},{"level":2,"title":"Setting Item Names","slug":"setting-item-names"},{"level":2,"title":"Your progress so far","slug":"your-progress-so-far"}],"relativePath":"items/items-intro.md","lastUpdated":1640246554483}`,c={},u=e('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Items on the stable version of Minecraft (1.10 format version) are missing many new features, available in experimental (1.16 format version). You can learn more about <a href="/items/items-16.html">experimental items here</a>.</p></div><p>Every item, block, or entity requires a <code>Behavior</code> file in the BP folder (to define how the item will behave) and a Resource file in the <code>RP</code> folder (to specify what the item will look like in-game).</p><p>Let&#39;s start by creating our simple item&#39;s behavior file: <code>BP/items/gem.item.json</code> (In some steps, like this one, you will first need to create a folder before the file can be created).</p><h2 id="gem-behavior-code-bp" tabindex="-1">Gem Behavior Code (BP) <a class="header-anchor" href="#gem-behavior-code-bp" aria-hidden="true">#</a></h2>',4),m=o("BP/items/gem.item.json"),d=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.10&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;minecraft:item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wiki:gem&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;minecraft:hand_equipped&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:stacked_by_data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:foil&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:max_stack_size&quot;</span><span class="token operator">:</span> <span class="token number">64</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:max_damage&quot;</span><span class="token operator">:</span> <span class="token number">10</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li><code>format_version</code> defines what format the file uses. We&#39;ll be using 1.10.</li><li><code>identifier</code> in <code>description</code> is used in blocks, recipes, and entities. It will be used to define your item. For example, you can use /give with the identifier like this: <code>/give @s wiki:gem</code>. The first part of the identifier is your pack&#39;s namespace. It&#39;s best to use the same namespace throughout your pack. It can be anything you like (e.g. <code>kf:</code>, <code>jdot:</code>, <code>ve:</code>, <code>kai:</code>) providing it isn&#39;t too long. A namespace CANNOT be <code>minecraft:</code> or <code>minecon:</code>. The second part of the identifier is the name of the item, entity, recipe, or block.</li><li><code>components</code> are &quot;qualities&quot; the object always has. We&#39;ll look deeper into them when creating a custom entity. Let&#39;s break up everything into &quot;components&quot;. <ul><li><code>minecraft:hand_equipped</code> defines whether the item &#39;equips&#39; in your hand. This controls how the item is displayed on your character. For example, a Wooden Sword is hand equipped, but an Apple isn&#39;t.</li><li><code>minecraft:stacked_by_data</code> defines whether this item with different aux values will be able to stack. For example</li><li>the item &quot;minecraft:dye&quot; with aux value 0, which is an Ink Sack (<code>/give @s dye 1 0</code>), doesn&#39;t stack with &quot;minecraft:dye&quot; with aux value 12, which is a Cocoa Bean (<code>/give @s dye 1 12</code>).</li><li>&quot;minecraft:foil&quot; defines whether the item will have the enchantment glint on it. An enchanted Shovel has this component set to true, but a disenchanted one to false.</li><li><code>minecraft:max_stack_size</code> sets how many items can stack in a single inventory slot. It cannot be larger than 64. Set this to 1 for an unstackable item.</li><li><code>minecraft:max_damage</code> can be omitted since it&#39;s for tools and weapons. It defines the item&#39;s durability and is rarely used in simple items.</li></ul></li></ul><p>For more information on components, you can always refer to the documentation on <a href="https://bedrock.dev/docs/stable/Item" target="_blank" rel="noopener noreferrer">bedrock.dev/r/Item.</a>.</p><p>If you enter the game now, the item will function, but it will be invisible. You can test the functionality of your item by running <code>./give @s wiki:gem</code>. Let&#39;s fix the invisibility by defining the items visuals in the RP folder.</p><h2 id="gem-resource-code-rp" tabindex="-1">Gem Resource Code (RP) <a class="header-anchor" href="#gem-resource-code-rp" aria-hidden="true">#</a></h2>`,5),b=o('RP/items/gem.item.json"'),k=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.10&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;minecraft:item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wiki:gem&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nature&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;minecraft:icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gem&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:render_offsets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tools&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>Set the same <code>identifier</code> under <code>description</code>, as in the item&#39;s behavior file.</li><li><code>category</code> defines the category of items of the item in the creative inventory. It can be set to &quot;Nature&quot;, &quot;Equipment&quot;, &quot;Construction&quot; or &quot;Items&quot;.</li><li>Note that due to a bug, items will not display in the Creative Inventory how they are supposed to, and you&#39;ll have to use <code>/give</code> to get them.</li><li>Here are the components, explained: <ul><li><code>minecraft:render_offsets</code> defines how the item should be rendered. It can be set to pretty much any Vanilla item name, for example, &quot;apple&quot;.</li><li><code>minecraft:use_animation</code> defines what animation to use when the player is using the item (Can be set to &quot;bow&quot;, &quot;eat&quot;, &quot;drink&quot;, &quot;crossbow&quot;, &quot;camera&quot;). It isn&#39;t needed in simple items, only foods, and weapons.</li><li><code>minecraft:icon</code> defines the item texture&#39;s short name. Let&#39;s look more into it.</li></ul></li></ul><h2 id="gem-textures-and-shortnames" tabindex="-1">Gem Textures and Shortnames <a class="header-anchor" href="#gem-textures-and-shortnames" aria-hidden="true">#</a></h2><p>To define your item texture&#39;s shortname (to use the texture on an item), you first need to create the texture. Create a 16*16 image file, draw a gem on it, and save it into <code>RP/textures/items/gem.png</code>.</p><p>Now let&#39;s create the file where texture short names will be defined: <code>RP/textures/item_texture.json</code>, and copy this code into it:</p>`,5),h=o("RP/textures/item_texture.json"),f=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;resource_pack_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tut&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;texture_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;atlas.items&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;texture_data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;gem&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;textures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;textures/items/gem&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><code>resource_pack_name</code> isn&#39;t important; you can set it to your identifier.</li><li>Keep &quot;texture_name&quot; as &quot;atlas.items&quot;.</li><li>In the <code>texture_data</code> objects, you&#39;ll define all your item texture shortnames.</li><li><code>gem</code> is the short name for the &quot;textures/items/gem&quot; texture you drew a few moments ago. This same <code>gem</code> is defined in <code>minecraft:icon</code> component of the Resource file of your item.</li></ul><h2 id="your-gem-is-finished" tabindex="-1">Your Gem is finished! <a class="header-anchor" href="#your-gem-is-finished" aria-hidden="true">#</a></h2><p>Done! If you did everything correctly, your Gem can now be obtainable by <code>/give</code> in-game. If you&#39;re having trouble, watch your <a href="/guide/troubleshooting.html#content-log">Content Log</a>. If the item still malfunctions, check out the example files.</p><h2 id="custom-food-item-creating-an-eatable-meal" tabindex="-1">Custom food item: - creating an eatable &#39;Meal&#39; <a class="header-anchor" href="#custom-food-item-creating-an-eatable-meal" aria-hidden="true">#</a></h2><p>Creating a food item is the same as creating a simple item, except an additional component is needed in the item&#39;s behavior file. Let&#39;s get started by creating it as <code>BP/items/meal.item.json</code>. Here&#39;s the code: It looks very similar to the previous item&#39;s behaviors.</p><h3 id="meal-bp-code" tabindex="-1">Meal BP Code <a class="header-anchor" href="#meal-bp-code" aria-hidden="true">#</a></h3>`,7),q=o("BP/items/meal.item.json"),_=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.12.0&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;minecraft:item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wiki:meal&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;minecraft:hand_equipped&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:stacked_by_data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:foil&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:max_stack_size&quot;</span><span class="token operator">:</span> <span class="token number">64</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:use_duration&quot;</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:food&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token property">&quot;nutrition&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
				<span class="token property">&quot;saturation_modifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;can_always_eat&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
				<span class="token property">&quot;effects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
					<span class="token punctuation">{</span>
						<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;regeneration&quot;</span><span class="token punctuation">,</span>
						<span class="token property">&quot;chance&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
						<span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
						<span class="token property">&quot;amplifier&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token punctuation">{</span>
						<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;absorption&quot;</span><span class="token punctuation">,</span>
						<span class="token property">&quot;chance&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
						<span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
						<span class="token property">&quot;amplifier&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">]</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><ul><li>A new item needs a unique <code>identifier</code>, but the same <a href="/concepts/namespaces.html">namespace</a>.</li><li><code>minecraft:use_duration</code> defines how long the player will need to hold the &#39;use&#39; button to consume the food</li><li><code>minecraft:food</code> is the component that makes the item a food item. Let&#39;s break it up: <ul><li><code>nutrition</code> means hunger points to be added when the player consumes the food.</li><li><code>saturation_modifier</code> shows how long these will last. Can be set to &quot;poor&quot;, &quot;low&quot;, &quot;normal&quot;, &quot;high&quot;, &quot;good&quot;, &quot;max&quot; and &quot;supernatural&quot;;</li><li><code>can_always_eat</code> defines if the player can eat the food even if their hunger bar is full. For Golden Apples, this component is set to true. Most other vanilla food is set to false.</li><li><code>effects</code> are the status effects to be applied when the player consumes the food. It&#39;s pretty self-explanatory: when the player consumes this item, they&#39;ll get <code>Regeneration I</code> for 5 seconds and <code>Resistance III</code> for 120 seconds. This component is optional.</li></ul></li></ul><h3 id="meal-rp-code" tabindex="-1">Meal RP Code <a class="header-anchor" href="#meal-rp-code" aria-hidden="true">#</a></h3>`,3),g=o("RP/items/meal.item.json"),y=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.10&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;minecraft:item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wiki:meal&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nature&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;minecraft:icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;meal&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:use_animation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eat&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;minecraft:render_offsets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apple&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>The preceding code goes in <code>RP/items/meal.item.json</code>, similarly to the Gem.</p><ul><li><code>minecraft:use_animation</code> defines what animation to use when the player is using the item (Can be set to &quot;bow&quot;, &quot;eat&quot;, &quot;drink&quot;, &quot;crossbow&quot;, &quot;camera&quot;). It isn&#39;t needed in simple items, only foods, and weapons.</li></ul><h3 id="meal-textures-and-shortnames" tabindex="-1">Meal Textures and Shortnames <a class="header-anchor" href="#meal-textures-and-shortnames" aria-hidden="true">#</a></h3>`,4),v=o("RP/textures/item_texture.json"),x=e(`<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;resource_pack_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tut&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;texture_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;atlas.items&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;texture_data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;meal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;textures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;textures/items/meal&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;gem&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;textures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;textures/items/gem&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>And, lastly, let&#39;s create the texture as <code>RP/textures/items/meal.png</code> and set its shortname to &quot;meal&quot; in <code>RP/textures/item_texture.json</code>.</p><p>Make sure to check out the current Item documentation for even more components on <a href="https://bedrock.dev/docs/stable/Item" target="_blank" rel="noopener noreferrer">bedrock.dev/r/Item!</a></p><h2 id="setting-item-names" tabindex="-1">Setting Item Names <a class="header-anchor" href="#setting-item-names" aria-hidden="true">#</a></h2><p>Your items should now show up in-game, but they have weird names consisting of their identifiers. For example, <code>wiki:gem</code> shows up as <code>item.wiki:gem.name</code>. To fix this, we need a <code>.lang</code> file in <code>RP/texts</code>. If you have US English set as your language in Minecraft settings, you&#39;ll need to name your text file <code>en_US.lang</code>. You can find file names for other languages in the example resource pack&#39;s texts folder. Paste the following &quot;code&quot; into res/texts/en_US.lang. Now your items will have the correct names:</p>`,5),w=o("RP/texts/en_US.lang"),T=e(`<div class="language-"><pre><code>item.wiki:gem.name=Gem
item.wiki:meal.name=Meal
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><a href="/concepts/text-and-translations.html">You can learn more about .lang here</a></p>`,2),I=n("div",{markdown:"0",class:"folder-structure"},[n("ul",null,[n("li",null,[n("span",{class:"folder"},"BP"),n("ul",null,[n("li",null,[n("span",{class:"folder"},"items"),n("ul",null,[n("li",null,[n("a",{href:"#bp_gem_item",class:"file"},"gem.item.json")]),n("li",null,[n("a",{href:"#bp_meal_item",class:"file"},"meal.item.json")])])])])]),n("li",null,[n("span",{class:"folder"},"RP"),n("ul",null,[n("li",null,[n("span",{class:"folder"},"items"),n("ul",null,[n("li",null,[n("a",{href:"#rp_gem_item",class:"file"},"gem.item.json")]),n("li",null,[n("a",{href:"#rp_meal_item",class:"file"},"meal.item.json")])])]),n("li",null,[n("span",{class:"folder"},"texts"),n("ul",null,[n("li",null,[n("span",{class:"file"},"en_US.lang")])])]),n("li",null,[n("span",{class:"folder"},"textures"),n("ul",null,[n("li",null,[n("span",{class:"file"},"item_texture.json")]),n("li",null,[n("span",{class:"folder"},"items"),n("ul",null,[n("li",null,[n("span",{class:"image"},"gem.png")]),n("li",null,[n("span",{class:"image"},"meal.png")])])])])])])])])],-1),P=e('<hr><h2 id="your-progress-so-far" tabindex="-1">Your progress so far <a class="header-anchor" href="#your-progress-so-far" aria-hidden="true">#</a></h2><p><strong>What you&#39;ve done:</strong></p><ul><li>[x] Created a simple item</li><li>[x] Created a custom food</li><li>[x] Learned to link textures using short names in <code>item_textures.json</code></li><li>[x] Learned to define names in the <code>.lang</code> file</li></ul><p><strong>What are you to do next:</strong></p><ul><li>[ ] Create custom blocks</li><li>[ ] Learn to define flipbook and directional textures</li></ul>',6);function C(S,A,R,j,N,V){const s=r("CodeHeader");return i(),l("div",null,[u,a(s,null,{default:t(()=>[m]),_:1}),d,a(s,null,{default:t(()=>[b]),_:1}),k,a(s,null,{default:t(()=>[h]),_:1}),f,a(s,null,{default:t(()=>[q]),_:1}),_,a(s,null,{default:t(()=>[g]),_:1}),y,a(s,null,{default:t(()=>[v]),_:1}),x,a(s,null,{default:t(()=>[w]),_:1}),T,I,P])}var E=p(c,[["render",C]]);export{G as __pageData,E as default};
