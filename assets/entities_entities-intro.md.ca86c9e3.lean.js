import{_ as o,r as p,c as r,a,w as e,e as n,o as c,d as t}from"./404.md.a3cbf24a.js";const I='{"title":"Intro to Entities","description":"","frontmatter":{"title":"Intro to Entities","category":"General","nav_order":1,"tags":["guide"]},"headers":[{"level":2,"title":"Components","slug":"components"},{"level":2,"title":"Component groups","slug":"component-groups"},{"level":2,"title":"Events","slug":"events"},{"level":3,"title":"Conditional Events","slug":"conditional-events"},{"level":3,"title":"Triggering events","slug":"triggering-events"},{"level":2,"title":"Uses in vanilla","slug":"uses-in-vanilla"}],"relativePath":"entities/entities-intro.md","lastUpdated":1639905778851}',l={},i=n('',8),u=t("BP/entities/example.json#minecraft:entity"),m=n(`__VP_STATIC_START__<div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;minecraft:type_family&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;family&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;player&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;minecraft:collision_box&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;width&quot;</span><span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>
        <span class="token property">&quot;height&quot;</span><span class="token operator">:</span> <span class="token number">1.8</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;minecraft:can_climb&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Notice how the <code>components</code> list <em>only</em> contains components.</p><h2 id="component-groups" tabindex="-1">Component groups <a class="header-anchor" href="#component-groups" aria-hidden="true">#</a></h2><p>Component groups are &quot;folders&quot; for components. They group components and can be added or removed using <code>events</code> to create custom game-play.</p><p>Here is an example:</p>__VP_STATIC_END__`,5),d=t("BP/entities/example.json#minecraft:entity"),b=n(`__VP_STATIC_START__<div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">//the name of the component group</span>
    <span class="token property">&quot;minecraft:cat_persian&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>

        <span class="token comment">//A list of valid components. Add as many as you like.</span>
        <span class="token property">&quot;minecraft:variant&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">6</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;minecraft:physics&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">//the name of a second component group</span>
    <span class="token property">&quot;wiki:example_group&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;minecraft:type_family&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;family&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;wiki_is_awesome!&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>All component groups are custom-created. You cannot use component groups from other entities in your entity.</p><p>In vanilla Minecraft entities, component groups are namespaced with <code>minecraft:</code>, like <code>minecraft:cat_persian</code> above. But it is important to remember that they are <em>not components</em>. When you create your component groups, you can use whatever name/namespace:name combination you want. For example, <code>wiki:example_group</code> above. <a href="/concepts/namespaces.html">Here</a>&#39;s more info on namespaces.</p><p>When a component is placed into a group, is it <em>not</em> automatically added to your entity. It won&#39;t do anything at all until the group is added. When the group is added, the component will become active and start affecting the behavior of your entity.</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><p>Events are a special syntax for adding and removing component groups. By adding/removing groups, we can create dynamic behavior for our entities.</p><p>An example:</p>__VP_STATIC_END__`,7),k=t("BP/entities/example.json#minecraft:entity#events"),h=n(`__VP_STATIC_START__<div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;minecraft:ageable_grow_up&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//Name of the event</span>
    <span class="token property">&quot;remove&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//list of component groups to remove</span>
        <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;minecraft:cat_baby&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;add&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;minecraft:cat_adult&quot;</span> <span class="token comment">//list of component groups to add.</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Like component groups, events are 100% custom-created inside each entity. You cannot use events from other entities on your own. Do not be tempted to use <code>&quot;minecraft:ageable_grow_up&quot;</code> in your own entity. If you want grow-up functionality, you need to define the component groups and events yourself.</p><p>The only thing you can add/remove from an entity is <code>component groups</code>. As tempting as it is to try and add/remove components directly, this is not possible.</p><h3 id="conditional-events" tabindex="-1">Conditional Events <a class="header-anchor" href="#conditional-events" aria-hidden="true">#</a></h3><p>Conditional events are events using &quot;filters&quot; to return a component group depending on your filter (see the example below). We are testing if a tag exists and if it doesn&#39;t return the &quot;prefix:is_false&quot; component, but if it does exist, return &quot;prefix:is_true&quot;.</p><p>An example:</p>__VP_STATIC_END__`,6),g=t("BP/entities/example.json#minecraft:entity#events"),_=n(`__VP_STATIC_START__<div class="language-json line-numbers-mode"><pre><code>      <span class="token property">&quot;prefix:event_name&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//Name of the event</span>
        <span class="token property">&quot;sequence&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">//Sequence 1 &gt;&gt;&gt; 2 &gt;&gt;&gt; 3 this follows top to bottom order.</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;filters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//filter this checks if the filter conditions are false.</span>
              <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;has_tag&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;self&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;not&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag_name&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;add&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//list of component groups to remove.</span>
              <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;prefix:is_false&quot;</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;remove&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//list of component groups to add.</span>
              <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;prefix:is_true&quot;</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;filters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//filter this checks if the filter conditions are true.</span>
              <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;has_tag&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;self&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag_name&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;add&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//list of component groups to add.</span>
              <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;prefix:is_true&quot;</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;remove&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//list of component groups to remove.</span>
              <span class="token property">&quot;component_groups&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;prefix:is_false&quot;</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="triggering-events" tabindex="-1">Triggering events <a class="header-anchor" href="#triggering-events" aria-hidden="true">#</a></h3><p>Many components can trigger events. Particularly, components like the <a href="https://docs.microsoft.com/en-us/minecraft/creator/reference/content/entityreference/examples/entitycomponents/minecraftcomponent_environment_sensor" target="_blank" rel="noopener noreferrer">environment sensor</a> or <a href="https://docs.microsoft.com/en-us/minecraft/creator/reference/content/entityreference/examples/entitycomponents/minecraftcomponent_timer" target="_blank" rel="noopener noreferrer">timer</a>.</p><p><code>Note:</code> You can also use the <code>/event &lt;target&gt; &lt;prefix:event_name&gt;</code> to trigger an event directly off an entity. In the below example, we run the &quot;minecraft:become_charged&quot; event to turn all creepers in loaded chunks into charged creepers.</p><p>An example.</p>__VP_STATIC_END__`,5),f=n(`__VP_STATIC_START__<div class="language-"><pre><code>## Command usage to send an event to all creepers.
/event entity @e[type=creeper] minecraft:become_charged
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The flow is:</p><ul><li>Add the component to the entity</li><li>Component triggers event or <code>/event</code> triggers event</li><li>Which adds component group</li><li>Which adds the component</li><li>Which affects the entity in some form or another.</li></ul><h2 id="uses-in-vanilla" tabindex="-1">Uses in vanilla <a class="header-anchor" href="#uses-in-vanilla" aria-hidden="true">#</a></h2><p>Component groups and events are the primary tools that vanilla entities use to create custom and adaptable behavior. For a specific example, look at the zombie.</p><p>The zombie is programmed to turn into a <code>drowned</code> if it spends too long under the water. Look at the component groups and events, and see if you can work out how this is done!</p>__VP_STATIC_END__`,6);function q(y,v,w,T,x,C){const s=p("CodeHeader");return c(),r("div",null,[i,a(s,null,{default:e(()=>[u]),_:1}),m,a(s,null,{default:e(()=>[d]),_:1}),b,a(s,null,{default:e(()=>[k]),_:1}),h,a(s,null,{default:e(()=>[g]),_:1}),_,a(s),f])}var S=o(l,[["render",q]]);export{I as __pageData,S as default};
