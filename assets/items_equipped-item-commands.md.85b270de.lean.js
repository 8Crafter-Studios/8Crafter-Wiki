import{_ as p,r,c as i,a as s,w as e,b as o,d as n,e as t,o as l}from"./404.md.bed3cb14.js";const z='{"title":"Run Commands with Equipped Items","description":"","frontmatter":{"title":"Run Commands with Equipped Items","category":"Tutorials","tags":["experimental","intermediate"],"mention":["Chikorita-Lover"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"Server animation","slug":"server-animation"},{"level":2,"title":"Item behavior","slug":"item-behavior"},{"level":2,"title":"Player behavior","slug":"player-behavior"},{"level":2,"title":"Conclusion","slug":"conclusion"},{"level":2,"title":"Additions","slug":"additions"},{"level":3,"title":"Multiple required items","slug":"multiple-required-items"},{"level":3,"title":"Further conditions","slug":"further-conditions"},{"level":3,"title":"Multiple items with effects","slug":"multiple-items-with-effects"}],"relativePath":"items/equipped-item-commands.md","lastUpdated":1646023385691}',c={},u=o("h2",{id:"introduction",tabindex:"-1"},[n("Introduction "),o("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#")],-1),m=o("p",null,"A common concept for add-ons is implementing new armor sets with unique effects, just like the turtle shell and netherite armor. While items have a knockback resistance component, they don't have a component for inflicting mob effects, emitting particles, etc. under certain conditions. However, using server animations, Molang, and item tags, this can easily be done!",-1),d=o("p",null,"Keep in mind that this requires modifying the player behavior, which is a common theme for many add-ons; thus, your add-on may not be compatible with others if you wish to do this.",-1),_=o("p",null,"The use of Holiday Creator Features is also required to add item tags and easily equip our item in armor or off-hand slots.",-1),b=o("h2",{id:"server-animation",tabindex:"-1"},[n("Server animation "),o("a",{class:"header-anchor",href:"#server-animation","aria-hidden":"true"},"#")],-1),h=o("p",null,"The first step will be to create a server animation, which is a file that runs commands or events at certain keyframes. While client animations are in the resource pack, server animations are in the behavior pack. We can start by using the following as a template:",-1),k=n("BP/animations/player.json"),q=t("",4),y=n("BP/animations/player.json#timeline"),f=t("",8),g=n("BP/items/my_item.json#components"),v=t("",5),w=n("BP/entities/player.json#description"),T=t("",10),x=n("BP/entities/player.json#description"),A=t("",8),I=n("BP/entities/player.json#scripts"),S=t("",4),P=n("BP/entities/player.json#scripts"),C=t("",3),V=n("BP/entities/player.json#scripts"),j=t("",4),N=n("BP/animations/player.json"),B=t("",2),E=n("BP/entities/player.json#description"),M=t("",1);function R(D,W,Y,F,H,L){const a=r("CodeHeader");return l(),i("div",null,[u,m,d,_,b,h,s(a,null,{default:e(()=>[k]),_:1}),q,s(a,null,{default:e(()=>[y]),_:1}),f,s(a,null,{default:e(()=>[g]),_:1}),v,s(a,null,{default:e(()=>[w]),_:1}),T,s(a,null,{default:e(()=>[x]),_:1}),A,s(a,null,{default:e(()=>[I]),_:1}),S,s(a,null,{default:e(()=>[P]),_:1}),C,s(a,null,{default:e(()=>[V]),_:1}),j,s(a,null,{default:e(()=>[N]),_:1}),B,s(a,null,{default:e(()=>[E]),_:1}),M])}var K=p(c,[["render",R]]);export{z as __pageData,K as default};
