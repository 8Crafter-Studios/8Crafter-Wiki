import{_ as a,r as i,c,b as l,a as t,w as o,e as n,d as e,o as r}from"./404.md.bbfaa0a0.js";const x='{"title":"Functions","description":"","frontmatter":{"title":"Functions","mention":["SirLich"],"tags":["easy"]},"headers":[{"level":2,"title":"Running functions through tick.json","slug":"running-functions-through-tick-json"},{"level":3,"title":"Creating tick.json","slug":"creating-tick-json"},{"level":3,"title":"Known Issues","slug":"known-issues"}],"relativePath":"commands/mcfunction.md","lastUpdated":1641210324843}',u={},d=n('',3),p=e("Example: "),f=e("BP/functions/my_function.mcfunction"),h=n(`__VP_STATIC_START__<div class="language-"><pre><code>tag @s add dev
gamemode creative
effect @s night_vision 100000 1 true

# You can write comments like this
say hey!
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Functions can be executed in-game by typing <code>/function name_of_function</code>. This will execute all the commands in the function file, all in a single tick. Nested functions will also run in the same tick as the parent function.</p><p>Function files can be nested, for example: <code>BP/functions/teleport/home.mcfunction</code> will create a new function called <code>teleport/home</code>, which can be called in game like <code>/function teleport/home</code>.</p><p>Function files can be reloaded without leaving the game with the <code>/reload</code> command.</p><h2 id="running-functions-through-tick-json" tabindex="-1">Running functions through tick.json <a class="header-anchor" href="#running-functions-through-tick-json" aria-hidden="true">#</a></h2><p><code>tick.json</code> is a server-side file located as <code>BP/functions/tick.json</code> that lets you execute function files.</p><p>Functions will be run for each tick as if placed in a repeating command block.</p><h3 id="creating-tick-json" tabindex="-1">Creating tick.json <a class="header-anchor" href="#creating-tick-json" aria-hidden="true">#</a></h3><p>Create a file called tick.json in your root function folder. The format is this:</p>__VP_STATIC_END__`,9),m=e("BP/functions/tick.json"),_=n(`__VP_STATIC_START__<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
	<span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;function_file_name_one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;function_file_name_two&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="known-issues" tabindex="-1">Known Issues <a class="header-anchor" href="#known-issues" aria-hidden="true">#</a></h3><p>While this is a valuable file when you&#39;re trying to stray away from using repeating command blocks in-game, it&#39;s known for executing function files before the world has fully loaded in. This might cause unintended command behavior and crashes, and it&#39;s recommended to wait for a more official release of this file.</p>__VP_STATIC_END__`,3);function g(b,k,v,w,T,y){const s=i("CodeHeader");return r(),c("div",null,[d,l("p",null,[p,t(s,null,{default:o(()=>[f]),_:1})]),h,t(s,null,{default:o(()=>[m]),_:1}),_])}var C=a(u,[["render",g]]);export{x as __pageData,C as default};
