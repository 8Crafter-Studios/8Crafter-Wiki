import{_ as t,k as a,a6 as l,j as o}from"./chunks/framework.Bul4SA1j.js";const b=JSON.parse('{"title":"Parameter Types","description":"The list of the command parameter types in this add-on.","frontmatter":{"title":"Parameter Types","page_title":"Parameter Types","description":"The list of the command parameter types in this add-on.","nav_order":3},"headers":[{"level":3,"title":"int","slug":"int","link":"#int","children":[]},{"level":3,"title":"int32","slug":"int32","link":"#int32","children":[]},{"level":3,"title":"int64","slug":"int64","link":"#int64","children":[]},{"level":3,"title":"decimal","slug":"decimal","link":"#decimal","children":[]},{"level":3,"title":"float","slug":"float","link":"#float","children":[]},{"level":3,"title":"number","slug":"number","link":"#number","children":[]},{"level":3,"title":"extendedNumber","slug":"extendednumber","link":"#extendednumber","children":[]},{"level":3,"title":"nonNaNNumber","slug":"nonnannumber","link":"#nonnannumber","children":[]},{"level":3,"title":"nonNaNExtendedNumber","slug":"nonnanextendednumber","link":"#nonnanextendednumber","children":[]},{"level":3,"title":"BigInt","slug":"bigint","link":"#bigint","children":[]},{"level":3,"title":"boolean","slug":"boolean","link":"#boolean","children":[]},{"level":3,"title":"string","slug":"string","link":"#string","children":[]},{"level":3,"title":"JSON","slug":"json","link":"#json","children":[]},{"level":3,"title":"JSONArray","slug":"jsonarray","link":"#jsonarray","children":[]},{"level":3,"title":"JSONObject","slug":"jsonobject","link":"#jsonobject","children":[]},{"level":3,"title":"JSONString","slug":"jsonstring","link":"#jsonstring","children":[]},{"level":3,"title":"JSONNumber","slug":"jsonnumber","link":"#jsonnumber","children":[]},{"level":3,"title":"JSONBoolean","slug":"jsonboolean","link":"#jsonboolean","children":[]},{"level":3,"title":"text","slug":"text","link":"#text","children":[]},{"level":3,"title":"escapableString","slug":"escapablestring","link":"#escapablestring","children":[]},{"level":3,"title":"target","slug":"target","link":"#target","children":[]},{"level":3,"title":"targetSelector","slug":"targetselector","link":"#targetselector","children":[]},{"level":3,"title":"itemId","slug":"itemid","link":"#itemid","children":[]},{"level":3,"title":"blockId","slug":"blockid","link":"#blockid","children":[]},{"level":3,"title":"Block","slug":"block","link":"#block","children":[]},{"level":3,"title":"Item","slug":"item","link":"#item","children":[]},{"level":3,"title":"BlockPattern","slug":"blockpattern","link":"#blockpattern","children":[]},{"level":3,"title":"Mask","slug":"mask","link":"#mask","children":[]},{"level":3,"title":"SingleBlockMask","slug":"singleblockmask","link":"#singleblockmask","children":[]},{"level":3,"title":"BlockType","slug":"blocktype","link":"#blocktype","children":[]},{"level":3,"title":"block states","slug":"block-states","link":"#block-states","children":[]},{"level":3,"title":"x y z","slug":"x-y-z","link":"#x-y-z","children":[]},{"level":3,"title":"location","slug":"location","link":"#location","children":[]},{"level":3,"title":"~","slug":"","link":"#","children":[]},{"level":3,"title":"Dimension","slug":"dimension","link":"#dimension","children":[]},{"level":3,"title":"RGBA","slug":"rgba","link":"#rgba","children":[]},{"level":3,"title":"RRGGBBAA","slug":"rrggbbaa","link":"#rrggbbaa","children":[]},{"level":3,"title":"RGB","slug":"rgb","link":"#rgb","children":[]},{"level":3,"title":"RRGGBB","slug":"rrggbb","link":"#rrggbb","children":[]},{"level":3,"title":"{<string>}","slug":"string-1","link":"#string-1","children":[]},{"level":3,"title":"(<parameterType>|<parameterType>)","slug":"parametertype-parametertype","link":"#parametertype-parametertype","children":[]}],"relativePath":"commands/parameter-types.md","filePath":"commands/parameter-types.md"}'),i={name:"commands/parameter-types.md"};function r(n,e,d,c,s,h){return o(),a("div",null,e[0]||(e[0]=[l('<h3 id="int" tabindex="-1">int <a class="header-anchor" href="#int" aria-label="Permalink to &quot;int&quot;">​</a></h3><p>An integer.</p><h3 id="int32" tabindex="-1">int32 <a class="header-anchor" href="#int32" aria-label="Permalink to &quot;int32&quot;">​</a></h3><p>A 32-bit integer.</p><h3 id="int64" tabindex="-1">int64 <a class="header-anchor" href="#int64" aria-label="Permalink to &quot;int64&quot;">​</a></h3><p>A 64-bit integer.</p><h3 id="decimal" tabindex="-1">decimal <a class="header-anchor" href="#decimal" aria-label="Permalink to &quot;decimal&quot;">​</a></h3><p>A decimal.</p><h3 id="float" tabindex="-1">float <a class="header-anchor" href="#float" aria-label="Permalink to &quot;float&quot;">​</a></h3><p>A float.</p><h3 id="number" tabindex="-1">number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;number&quot;">​</a></h3><p>A float, decimal, integer, Infinity, -Inifnity, or NaN.</p><h3 id="extendednumber" tabindex="-1">extendedNumber <a class="header-anchor" href="#extendednumber" aria-label="Permalink to &quot;extendedNumber&quot;">​</a></h3><p>A BigInt, float, decimal, integer, Infinity, -Inifnity, or NaN.</p><h3 id="nonnannumber" tabindex="-1">nonNaNNumber <a class="header-anchor" href="#nonnannumber" aria-label="Permalink to &quot;nonNaNNumber&quot;">​</a></h3><p>A float, decimal, integer, Infinity, or -Infinity.</p><h3 id="nonnanextendednumber" tabindex="-1">nonNaNExtendedNumber <a class="header-anchor" href="#nonnanextendednumber" aria-label="Permalink to &quot;nonNaNExtendedNumber&quot;">​</a></h3><p>A BigInt float, decimal, integer, Infinity, or -Infinity.</p><h3 id="bigint" tabindex="-1">BigInt <a class="header-anchor" href="#bigint" aria-label="Permalink to &quot;BigInt&quot;">​</a></h3><p>A BigInt. ex. 5n or 19284892917n</p><h3 id="boolean" tabindex="-1">boolean <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;boolean&quot;">​</a></h3><p>A boolean. (true or false, usually required to be lowercase)</p><h3 id="string" tabindex="-1">string <a class="header-anchor" href="#string" aria-label="Permalink to &quot;string&quot;">​</a></h3><p>A string. Can be either a string of text with no spaces, or a JSON formatted string. (ex. <code>&quot;some text\\nanother line of text \\uE359 and the unicode character U+E359&quot;</code> or <code>myStringOfText_With-0-Spaces</code>)</p><h3 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h3><p>Stringified JSON.</p><p>Some examples include:</p><p>1. <code>{&quot;a&quot;: 1, &quot;b&quot;: &quot;something&quot;, &quot;c&quot;: true, &quot;d&quot;: {&quot;p&quot;: 95, &quot;e&quot;: -99}, &quot;e&quot;: [{&quot;a&quot;: 54, &quot;b&quot;: true}, [1, &quot;a&quot;, true, false], 4, -9, true, false, null], &quot;f&quot;: null, &quot;g&quot;: -72}</code></p><p>2. <code>true</code></p><p>3. <code>false</code></p><p>4. <code>57</code></p><p>5. <code>-23</code></p><p>6. <code>&quot;some text\\nanother line of text \\uE359 and the unicode character U+E359&quot;</code></p><p>7. <code>[1, 4, true, -7, false, &quot;hi&quot;, &quot;test&quot;, &quot;to&quot;, &quot;text\\nnext line of text&quot;, {&quot;a&quot;: 1, &quot;b&quot;: 2}, [1, 4, false, &quot;some&quot;]]</code></p><h3 id="jsonarray" tabindex="-1">JSONArray <a class="header-anchor" href="#jsonarray" aria-label="Permalink to &quot;JSONArray&quot;">​</a></h3><p>A stringified JSON array.</p><p>Example: <code lang="js">[1, 4, true, -7, false, &quot;hi&quot;, &quot;test&quot;, &quot;to&quot;, &quot;text\\nnext line of text&quot;, {&quot;a&quot;: 1, &quot;b&quot;: 2}, [1, 4, false, &quot;some&quot;]]</code></p><h3 id="jsonobject" tabindex="-1">JSONObject <a class="header-anchor" href="#jsonobject" aria-label="Permalink to &quot;JSONObject&quot;">​</a></h3><p>A stringified JSON object.</p><p>Example: <code>{&quot;a&quot;: 1, &quot;b&quot;: &quot;something&quot;, &quot;c&quot;: true, &quot;d&quot;: {&quot;p&quot;: 95, &quot;e&quot;: -99}, &quot;e&quot;: [{&quot;a&quot;: 54, &quot;b&quot;: true}, [1, &quot;a&quot;, true, false], 4, -9, true, false, null], &quot;f&quot;: null, &quot;g&quot;: -72}</code></p><h3 id="jsonstring" tabindex="-1">JSONString <a class="header-anchor" href="#jsonstring" aria-label="Permalink to &quot;JSONString&quot;">​</a></h3><p>A JSON formatted string. ex. <code>&quot;some text\\nanother line of text \\uE359 and the unicode character U+E359&quot;</code></p><h3 id="jsonnumber" tabindex="-1">JSONNumber <a class="header-anchor" href="#jsonnumber" aria-label="Permalink to &quot;JSONNumber&quot;">​</a></h3><p>A decimal, float, integer, Infinity, -Infinity, or NaN.</p><h3 id="jsonboolean" tabindex="-1">JSONBoolean <a class="header-anchor" href="#jsonboolean" aria-label="Permalink to &quot;JSONBoolean&quot;">​</a></h3><p>A boolean.</p><h3 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;text&quot;">​</a></h3><p>A string of text that allows for spaces, does not need quotation marks.</p><h3 id="escapablestring" tabindex="-1">escapableString <a class="header-anchor" href="#escapablestring" aria-label="Permalink to &quot;escapableString&quot;">​</a></h3><p>A string of text that allows for spaces and JаvaScript escape codes, does not need quotation marks.</p><h3 id="target" tabindex="-1">target <a class="header-anchor" href="#target" aria-label="Permalink to &quot;target&quot;">​</a></h3><p>A target selector.</p><p>Examples:</p><ul><li><code>@s</code></li><li><code>Andexter8</code></li><li><code>Steve</code></li><li><code>@a[name=Herobrine,tag=test,c=1,rm=0.5,r=5,x=1,y=1,z=1]</code></li><li><code>@e[family=monster,type=creeper]</code></li></ul><h3 id="targetselector" tabindex="-1">targetSelector <a class="header-anchor" href="#targetselector" aria-label="Permalink to &quot;targetSelector&quot;">​</a></h3><p>The same as target.</p><h3 id="itemid" tabindex="-1">itemId <a class="header-anchor" href="#itemid" aria-label="Permalink to &quot;itemId&quot;">​</a></h3><p>A namespaced id of an item type, for example <code>andexdb:debug_stick</code>, or <code>minecraft:grass</code>, or <code>netherreactor</code>, or <code>stick</code>.</p><h3 id="blockid" tabindex="-1">blockId <a class="header-anchor" href="#blockid" aria-label="Permalink to &quot;blockId&quot;">​</a></h3><p>A namespaced id of a block type, for example <code>andexsa:diamond_crafting_table</code>, or <code>minecraft:grass_block</code>, or <code>glowingobsidian</code>, or <code>stone</code>.</p><h3 id="block" tabindex="-1">Block <a class="header-anchor" href="#block" aria-label="Permalink to &quot;Block&quot;">​</a></h3><p>The same as blockId. A namespaced id of a block type, for example <code>andexsa:diamond_crafting_table</code>, or <code>minecraft:grass_block</code>, or <code>glowingobsidian</code>, or <code>stone</code>.</p><h3 id="item" tabindex="-1">Item <a class="header-anchor" href="#item" aria-label="Permalink to &quot;Item&quot;">​</a></h3><p>The same as itemId. A namespaced id of an item type, for example <code>andexdb:debug_stick</code>, or <code>minecraft:grass</code>, or <code>netherreactor</code>, or <code lang="js">stick</code>.</p><h3 id="blockpattern" tabindex="-1">BlockPattern <a class="header-anchor" href="#blockpattern" aria-label="Permalink to &quot;BlockPattern&quot;">​</a></h3><p>// to-do</p><p>A block pattern.</p><h3 id="mask" tabindex="-1">Mask <a class="header-anchor" href="#mask" aria-label="Permalink to &quot;Mask&quot;">​</a></h3><h3 id="singleblockmask" tabindex="-1">SingleBlockMask <a class="header-anchor" href="#singleblockmask" aria-label="Permalink to &quot;SingleBlockMask&quot;">​</a></h3><h3 id="blocktype" tabindex="-1">BlockType <a class="header-anchor" href="#blocktype" aria-label="Permalink to &quot;BlockType&quot;">​</a></h3><h3 id="block-states" tabindex="-1">block states <a class="header-anchor" href="#block-states" aria-label="Permalink to &quot;block states&quot;">​</a></h3><p>A set of block states. Ex. [&quot;infiniburn_bit&quot;=false,&quot;cardinal_direction&quot;=&quot;north&quot;]</p><h3 id="x-y-z" tabindex="-1">x y z <a class="header-anchor" href="#x-y-z" aria-label="Permalink to &quot;x y z&quot;">​</a></h3><p>A set of coordinates, relative coordinates and caret notation are allowed.</p><p>Examples:</p><ul><li>70 92.67 -69.69</li><li>~~~</li><li>~1~~5</li><li>^^^5</li><li>^^^</li><li>^2^1^8.5</li><li>~1.73~9.47~-10.23</li><li>70 ~ 63</li><li>19.38 ~-2210.21038 124065123478</li></ul><h3 id="location" tabindex="-1">location <a class="header-anchor" href="#location" aria-label="Permalink to &quot;location&quot;">​</a></h3><p>A set of coordinates, relative coordinates are allowed.</p><p>Examples:</p><ul><li>70 92.67 -69.69</li><li>~~~</li><li>~1~~5</li><li>~1.73~9.47~-10.23</li><li>70 ~ 63</li><li>19.38 ~-2210.21038 124065123478</li></ul><h3 id="" tabindex="-1">~ <a class="header-anchor" href="#" aria-label="Permalink to &quot;~&quot;">​</a></h3><p>A tilde. ~</p><h3 id="dimension" tabindex="-1">Dimension <a class="header-anchor" href="#dimension" aria-label="Permalink to &quot;Dimension&quot;">​</a></h3><p>The name or namespaced id of a dimension. Valid values are overworld, nether, the_end, minecraft:overworld, minecraft:nether, and minecraft:the_end.</p><h3 id="rgba" tabindex="-1">RGBA <a class="header-anchor" href="#rgba" aria-label="Permalink to &quot;RGBA&quot;">​</a></h3><p>A 4-character RGBA hexadecimal color code. ex. F927</p><h3 id="rrggbbaa" tabindex="-1">RRGGBBAA <a class="header-anchor" href="#rrggbbaa" aria-label="Permalink to &quot;RRGGBBAA&quot;">​</a></h3><p>An 8-character RGBA hexadecimal color code. ex. FE932B76</p><h3 id="rgb" tabindex="-1">RGB <a class="header-anchor" href="#rgb" aria-label="Permalink to &quot;RGB&quot;">​</a></h3><p>A 3-character RGB hexadecimal color code. ex. F92</p><h3 id="rrggbb" tabindex="-1">RRGGBB <a class="header-anchor" href="#rrggbb" aria-label="Permalink to &quot;RRGGBB&quot;">​</a></h3><p>A 6-character RGB hexadecimal color code. ex. FE932B</p><h3 id="string-1" tabindex="-1">{&lt;string&gt;} <a class="header-anchor" href="#string-1" aria-label="Permalink to &quot;{\\&lt;string\\&gt;}&quot;">​</a></h3><p>This parameter type means that the value you type in for it is the exact text that is inside of the {}. For example if the parameter type is {testabcd} then for the parameter you would type in testabcd.</p><h3 id="parametertype-parametertype" tabindex="-1">(&lt;parameterType&gt;|&lt;parameterType&gt;) <a class="header-anchor" href="#parametertype-parametertype" aria-label="Permalink to &quot;(\\&lt;parameterType\\&gt;|\\&lt;parameterType\\&gt;)&quot;">​</a></h3><p>This parameter type means that it can actually be any of the parameter types separated by vertical lines | inside of the parentheses (). For example, if your parameter was [value: (number|(string|JSONArray)[maxLength=2])[?=5]] then for the parameter you could do a number, a string with a max length of 2, a JSONArray with a max length of 2, or nothing, and if you put nothing then it will just default to 5.</p>',96)]))}const m=t(i,[["render",r]]);export{b as __pageData,m as default};
