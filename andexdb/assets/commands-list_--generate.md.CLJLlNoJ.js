import{_ as l,k as o,l as t,A as a,a6 as h,I as d,J as s,E as i,j as p}from"./chunks/framework.Bul4SA1j.js";const f=JSON.parse('{"title":"\\\\\\\\generate","description":"The \\\\\\\\generate command.","frontmatter":{"title":"\\\\\\\\generate","page_title":"\\\\\\\\generate","description":"The \\\\\\\\generate command.","show_outline":false,"category":"WorldEdit","nav_order":3,"mentions":["stormstqr"]},"headers":[{"level":2,"title":"Syntax","slug":"syntax","link":"#syntax","children":[]},{"level":2,"title":"Result","slug":"result","link":"#result","children":[]},{"level":2,"title":"History","slug":"history","link":"#history","children":[]}],"relativePath":"commands-list/--generate.md","filePath":"commands-list/--generate.md"}'),k={name:"commands-list/--generate.md"};function c(m,e,y,g,u,x){const r=i("CommandDetailsTable"),n=i("indent");return p(),o("div",null,[e[1]||(e[1]=t("p",null,"Generates a 3d shape according to a formula in the selected area, in [-sr] the s modifier will prevent the math equation parser from replacing single equal signs with double equal signs and the r modifier will prevent that as well as any other modifications so that it is run as pure javascript, the formula can utilize the following variables: wx: world x, wy: world y, wz: world z, x: center relative x, y: center relative y, z: center relative z, ax: pos1 x, ay: pos1 y, az: pos1 z, bx: pos2 x, by: pos2 y, bz: pos2 z, nx: negative corner x, ny: negative corner y, nz: negative corner z, px: positive corner x, py: positive corner y, pz: positive corner z.",-1)),a(r,{name:"\\\\generate",categories:["system","world","server","worldedit"],requiredTags:["canUseChatCommands"],ultraSecurityModeSecurityLevel:"WorldEdit",version:"2.0.0",undoSupported:-2,functional:!0,deprecated:!1}),e[2]||(e[2]=h('<h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p><code class="shiki"><span style="--shiki-light:hsl(207, 61%, 41%);--shiki-dark:#569CD6;">\\\\generate</span><span style="--shiki-light:hsl(17, 47%, 36%);--shiki-dark:#CE9178;"> [-sr]</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;"> &lt;</span><span style="--shiki-light:hsl(201, 98%, 20%);--shiki-dark:#9CDCFE;">blockPattern</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;">: </span><span style="--shiki-light:hsl(99, 28%, 27%);--shiki-dark:#B5CEA8;">BlockPattern</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;">&gt;</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;"> &lt;</span><span style="--shiki-light:hsl(201, 98%, 20%);--shiki-dark:#9CDCFE;">expression</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;">: </span><span style="--shiki-light:hsl(99, 28%, 27%);--shiki-dark:#B5CEA8;">3DGeometricMathEquation</span><span style="--shiki-light:hsl(168, 53%, 45%);--shiki-dark:#4EC9B0;">&gt;</span></code></p>',2)),a(n,null,{default:d(()=>e[0]||(e[0]=[s("Generates a 3d shape")])),_:1}),e[3]||(e[3]=t("h2",{id:"result",tabindex:"-1"},[s("Result "),t("a",{class:"header-anchor",href:"#result","aria-label":'Permalink to "Result"'},"​")],-1)),e[4]||(e[4]=t("h2",{id:"history",tabindex:"-1"},[s("History "),t("a",{class:"header-anchor",href:"#history","aria-label":'Permalink to "History"'},"​")],-1))])}const C=l(k,[["render",c]]);export{f as __pageData,C as default};
